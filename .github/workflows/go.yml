name: Go

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      stage:
        description: 'stage to deploy'
        required: true
      api_version:
        description: 'API version'
        required: false
        default: '0.0.0'
      worker_version:
        description: 'Worker version'
        required: false
        default: '0.0.0'
      listener_version:
        description: 'Listener version'
        required: false
        default: '0.0.0'      

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Find Version
      id: versioning
      run: |
        apiV=$(echo ${{github.event.inputs.api_version}}| grep -Po "\d\d{1,}\.\d{1,}\.\d{1,}")
        echo "::set-output name=apiV::$apiV" 
    - name: sets file name
      run : |
        echo ${{ steps.versioning.outputs.apiV}}
    - name: changes jfrog download list
      run: |
        file=core-okapi\\/okapi\\/${{steps.versioning.outputs.apiV}}\\/${{github.event.inputs.stage}}-api-${{github.event.inputs.api_version}}.bin
        touch jfrog2.json
        sed -r 's/core-okapi\/okapi\/\{version\}\/\{stage\}-api-\{version-and-patch\}.bin/'"$file"'/g' jfrog.json > jfrog2.json
        cat jfrog2.json       
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
    - name: Docker Setup Buildx
      # You may pin to the exact commit or the version.
      # uses: docker/setup-buildx-action@154c24e1f33dbb5865a021c99f1318cfebf27b32
      uses: docker/setup-buildx-action@v1.1.1
    - name: Docker runs WhaleSay
      run: docker run docker/whalesay cowsay boo 
    - name: Echoing input
      if: ${{github.event.inputs.worker_version != '3.0.0'}}
      run: echo ${{github.event.inputs.stage}}
   
